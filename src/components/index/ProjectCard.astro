---
interface Props {
    title: string;
    description: string;
    tags: string[];
    codeLink: string;
    demoLink: string;
    index?: number; // optional for staggered delay
}

const { title, description, tags, codeLink, demoLink, index = 0 } = Astro.props;
const hasDemoLink = demoLink && demoLink.length > 0;
const buttonWidthClass = hasDemoLink ? 'w-1/2' : 'w-full';
---

<div
    class="relative flex flex-col p-6 sm:p-8 space-y-4 font-mono rounded-xl transition-all duration-500 ease-out transform hover:-translate-y-3 hover:scale-[1.02] w-full h-full group cursor-pointer overflow-hidden"
    data-animate
    data-direction="bottom"
>
    <!-- Animated Background Gradient -->
    <div
        class="absolute inset-0 rounded-xl border-2 border-transparent bg-transparent transition-all duration-500 ease-out group-hover:bg-gradient-to-br group-hover:from-purple-900/20 group-hover:via-blue-900/15 group-hover:to-pink-900/20 group-hover:border-white/30 group-hover:shadow-2xl group-hover:shadow-purple-500/20"
    >
    </div>

    <!-- Shimmer Effect -->
    <div
        class="absolute inset-0 rounded-xl opacity-0 group-hover:opacity-100 bg-gradient-to-r from-transparent via-white/5 to-transparent -translate-x-full group-hover:translate-x-full transform transition-transform duration-1000 ease-out"
    >
    </div>

    <div class="relative flex-1 space-y-3 sm:space-y-4 z-10">
        <h3
            class="text-white text-lg sm:text-xl md:text-2xl font-bold leading-tight group-hover:text-purple-500 transition-colors duration-300"
        >
            {title}
        </h3>

        <div
            class="prose prose-sm sm:prose-base prose-invert text-gray-400 group-hover:text-gray-300 transition-colors duration-300"
            set:html={description}
        />

        <div class="flex flex-wrap gap-2 pt-2 sm:pt-3">
            {
                tags.map((tag, i) => (
                    <span class="bg-gray-800/80 border border-gray-600/50 text-gray-200 text-xs sm:text-sm font-medium px-3 py-1.5 rounded-full backdrop-blur-sm transition-all duration-300 hover:bg-purple-800/30 hover:border-purple-500/50 hover:text-purple-200 hover:scale-105">
                        {tag}
                    </span>
                ))
            }
        </div>
    </div>

    <div class="flex flex-col sm:flex-row sm:flex-wrap gap-3 sm:gap-4 pt-4 sm:pt-6 z-10">
        <a
            href={codeLink}
            target="_blank"
            rel="noopener noreferrer"
            class={`w-full sm:w-[calc(50%-0.5rem)] ${buttonWidthClass} transform transition-all duration-300 hover:scale-105 focus:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500/50 rounded-lg`}
        >
            <div
                class="flex items-center justify-center space-x-2 sm:space-x-3 border border-gray-500/50 text-white font-medium px-4 py-3 sm:py-2.5 rounded-lg transition-all duration-300 hover:bg-white hover:text-black hover:border-white hover:shadow-lg hover:shadow-white/20 backdrop-blur-sm"
            >
                <svg class="h-5 w-5 sm:h-6 sm:w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path
                        fill-rule="evenodd"
                        d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.867-.013-1.702-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.007.07 1.532 1.03 1.532 1.03.89 1.529 2.34 1.087 2.91.828.092-.643.35-1.087.636-1.334-2.22-.253-4.555-1.113-4.555-4.949 0-1.09.39-1.983 1.029-2.682-.103-.253-.446-1.272.098-2.65 0 0 .84-.268 2.75 1.025A9.564 9.564 0 0112 6.844c.85.004 1.704.114 2.504.337 1.909-1.293 2.747-1.025 2.747-1.025.546 1.379.202 2.398.099 2.65.64.699 1.029 1.592 1.029 2.682 0 3.844-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.335-.012 2.41-.012 2.727 0 .268.18.579.688.482C21.137 20.17 24 16.415 24 12.017 24 6.484 19.522 2 14 2h-2z"
                    ></path>
                </svg>
                <span class="text-sm sm:text-base">Code</span>
            </div>
        </a>

        {
            hasDemoLink && (
                <a
                    href={demoLink}
                    target="_blank"
                    rel="noopener noreferrer"
                    class={`w-full sm:w-[calc(50%-0.5rem)] ${buttonWidthClass} transform transition-all duration-300 hover:scale-105 focus:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500/50 rounded-lg`}
                >
                    <div class="flex items-center justify-center space-x-2 sm:space-x-3 bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white font-medium px-4 py-3 sm:py-2.5 rounded-lg transition-all duration-300 hover:from-violet-600 hover:to-fuchsia-600 hover:shadow-lg hover:shadow-purple-500/30 relative overflow-hidden group">
                        <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-700" />
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            class="w-5 h-5 sm:w-6 sm:h-6 relative z-10"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M13.5 6H5.25A2.25 2.25 0 0 0 3 8.25v10.5A2.25 2.25 0 0 0 5.25 21h10.5A2.25 2.25 0 0 0 18 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"
                            />
                        </svg>
                        <span class="text-sm sm:text-base relative z-10">Demo</span>
                    </div>
                </a>
            )
        }
    </div>
</div>

<style>
    .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    * {
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
</style>
