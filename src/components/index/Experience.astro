---
import ExperienceCard from './ExperienceCard.astro';
import { getCollection } from 'astro:content';
const experiences = await getCollection('experience');
---

<section id="experience" class="text-gray-300 body-font relative overflow-hidden">
    <!-- Background decorative elements -->
    <div class="absolute inset-0 opacity-5">
        <div class="absolute top-1/4 left-1/4 w-96 h-96 bg-purple-500 rounded-full blur-3xl"></div>
        <div class="absolute bottom-1/3 right-1/4 w-80 h-80 bg-blue-500 rounded-full blur-3xl"></div>
    </div>

    <div
        class="container px-4 sm:px-8 md:px-16 lg:px-24 xl:px-32 pt-16 sm:pt-24 md:pt-32 lg:pt-48 xl:pt-64 mx-auto relative z-10"
    >
        <!-- Header -->
        <div class="flex items-center text-purple-600 gap-3 sm:gap-4 mb-8 sm:mb-12 md:mb-16">
            <div class="relative group">
                <div
                    class="absolute inset-0 bg-purple-500/20 opacity-0 rounded-lg blur-lg group-hover:bg-purple-400/30 transition-all duration-500"
                >
                </div>
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="w-8 h-8 sm:w-10 sm:h-10 relative z-10 transform group-hover:scale-110 group-hover:rotate-3 transition-all duration-500"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 0 0 .75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 0 0-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0 1 12 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 0 1-.673-.38m0 0A2.18 2.18 0 0 1 3 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 0 1 3.413-.387m7.5 0V5.25A2.25 2.25 0 0 0 13.5 3h-3a2.25 2.25 0 0 0-2.25 2.25v.894m7.5 0a48.667 48.667 0 0 0-7.5 0M12 12.75h.008v.008H12v-.008Z"
                    ></path>
                </svg>
            </div>
            <div class="relative overflow-hidden">
                <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl text-white font-mono ml-2">experience</h1>
            </div>
        </div>

        <!-- Experience cards -->
        <div class="flex flex-col space-y-8 sm:space-y-12 lg:space-y-16">
            {
                experiences.map((item, index) => (
                    <div class="experience-card">
                        <ExperienceCard
                            title={item.data.title}
                            company={item.data.company}
                            time={item.data.time}
                            description={item.body}
                            techs={item.data.techs}
                            url={item.data.url}
                        />
                    </div>
                ))
            }
        </div>
    </div>
</section>

<style>
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(2rem);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes slideInRight {
        from {
            transform: translateX(-100%);
            width: 0;
        }
        to {
            transform: translateX(0);
            width: 100%;
        }
    }

    @keyframes typewriter {
        from {
            width: 0;
        }
        to {
            width: 100%;
        }
    }

    .experience-header {
        animation: fadeInUp 1s ease-out forwards;
    }

    .title-text {
        position: relative;
        overflow: hidden;
    }

    .title-underline {
        animation: slideInRight 1.5s ease-out 0.8s forwards;
    }

    .experience-card {
        animation: fadeInUp 0.8s ease-out forwards;
    }

    /* Intersection Observer will handle the actual trigger */
    .experience-card.animate {
        animation: fadeInUp 0.8s ease-out forwards;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
        .title-text {
            background: linear-gradient(45deg, #a855f7, #3b82f6);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
    }
</style>

<script>
    // Intersection Observer for scroll animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px',
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
                observer.unobserve(entry.target);
            }
        });
    }, observerOptions);

    // Observe all experience cards
    document.querySelectorAll('.experience-card').forEach((card) => {
        observer.observe(card);
    });

    // Header animation trigger
    const header = document.querySelector('.experience-header');
    if (header) {
        observer.observe(header);
    }
</script>
